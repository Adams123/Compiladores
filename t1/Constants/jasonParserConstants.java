/* Generated By:JavaCC: Do not edit this line. jasonParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface jasonParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VAR = 9;
  /** RegularExpression Id. */
  int ARRAY = 10;
  /** RegularExpression Id. */
  int BEGIN = 11;
  /** RegularExpression Id. */
  int CALL = 12;
  /** RegularExpression Id. */
  int DO = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int END = 15;
  /** RegularExpression Id. */
  int ENDIF = 16;
  /** RegularExpression Id. */
  int ENDUNTIL = 17;
  /** RegularExpression Id. */
  int ENDWHILE = 18;
  /** RegularExpression Id. */
  int FUNCTION = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int INTEGER = 21;
  /** RegularExpression Id. */
  int PARAMETERS = 22;
  /** RegularExpression Id. */
  int PROCEDURE = 23;
  /** RegularExpression Id. */
  int RETURNS = 24;
  /** RegularExpression Id. */
  int RETURN = 25;
  /** RegularExpression Id. */
  int PROGRAM = 26;
  /** RegularExpression Id. */
  int REAL = 27;
  /** RegularExpression Id. */
  int RECORD = 28;
  /** RegularExpression Id. */
  int SET = 29;
  /** RegularExpression Id. */
  int STRING = 30;
  /** RegularExpression Id. */
  int THEN = 31;
  /** RegularExpression Id. */
  int TYPES = 32;
  /** RegularExpression Id. */
  int UNTIL = 33;
  /** RegularExpression Id. */
  int VARIABLES = 34;
  /** RegularExpression Id. */
  int WHILE = 35;
  /** RegularExpression Id. */
  int WRITE = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int AND = 38;
  /** RegularExpression Id. */
  int NOT = 39;
  /** RegularExpression Id. */
  int COMPARE = 40;
  /** RegularExpression Id. */
  int LEQUAL = 41;
  /** RegularExpression Id. */
  int HEQUAL = 42;
  /** RegularExpression Id. */
  int DIFF = 43;
  /** RegularExpression Id. */
  int LESS = 44;
  /** RegularExpression Id. */
  int HIGHER = 45;
  /** RegularExpression Id. */
  int SUM = 46;
  /** RegularExpression Id. */
  int SUB = 47;
  /** RegularExpression Id. */
  int MUL = 48;
  /** RegularExpression Id. */
  int DIV = 49;
  /** RegularExpression Id. */
  int LBAR = 50;
  /** RegularExpression Id. */
  int RBAR = 51;
  /** RegularExpression Id. */
  int LBRA = 52;
  /** RegularExpression Id. */
  int RBRA = 53;
  /** RegularExpression Id. */
  int DOT = 54;
  /** RegularExpression Id. */
  int COM = 55;
  /** RegularExpression Id. */
  int ASPD = 56;
  /** RegularExpression Id. */
  int REVBAR = 57;
  /** RegularExpression Id. */
  int EOL = 58;
  /** RegularExpression Id. */
  int DIGIT = 59;
  /** RegularExpression Id. */
  int NUM = 60;
  /** RegularExpression Id. */
  int LETTER = 61;
  /** RegularExpression Id. */
  int ID = 62;
  /** RegularExpression Id. */
  int STR = 63;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinComment = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>", 
    "\" \"", 
    "\"\\t\"", 
    "\"\\r\"", 
    "\"\\f\"", 
    "\"\\n\"", 
    "\"{\"", 
    "\"}\"", 
    "<token of kind 8>",
    "<VAR>",
    "<ARRAY>",
    "<BEGIN>",
    "<CALL>",
    "<DO>",
    "<ELSE>",
    "<END>",
    "<ENDIF>",
    "<ENDUNTIL>",
    "<ENDWHILE>",
    "<FUNCTION>",
    "<IF>",
    "<INTEGER>",
    "<PARAMETERS>",
    "<PROCEDURE>",
    "<RETURNS>",
    "<RETURN>",
    "<PROGRAM>",
    "<REAL>",
    "<RECORD>",
    "<SET>",
    "<STRING>",
    "<THEN>",
    "<TYPES>",
    "<UNTIL>",
    "<VARIABLES>",
    "<WHILE>",
    "<WRITE>",
    "<OR>", 
    "<AND>", 
    "<NOT>", 
    "<COMPARE>",  
    "<LEQUAL>",  
    "<HEQUAL>", 
    "<DIFF>", 
    "<LESS>", 
    "<HIGHER>", 
    "<SUM>", 
    "<SUB>", 
    "<MUL>", 
    "<DIV>", 
    "<LBAR>", 
    "<RBAR>", 
    "<LBRA>", 
    "<RBRA>", 
    "<DOT>", 
    "<COM>", 
    "<ASPD>", 
    "<REVBAR>", 
    "<EOL>",
    "<DIGIT>",
    "<NUM>",
    "<LETTER>",
    "<ID>",
    "<STR>",
  };

}
